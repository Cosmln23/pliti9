"use strict";(()=>{var e={};e.id=4211,e.ids=[4211],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57147:e=>{e.exports=require("fs")},71017:e=>{e.exports=require("path")},99583:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>v,originalPathname:()=>w,patchFetch:()=>D,requestAsyncStorage:()=>g,routeModule:()=>y,serverHooks:()=>f,staticGenerationAsyncStorage:()=>S,staticGenerationBailout:()=>h});var s={};a.r(s),a.d(s,{GET:()=>m,POST:()=>l});var r=a(95419),n=a(69108),o=a(99678),i=a(78070),c=a(57147),d=a.n(c),u=a(71017),p=a.n(u);async function l(e){try{let t=await e.json();console.log("\uD83D\uDCBE SAVING PAYMENT TO DATABASE"),t.id=`pay_${Date.now()}_${Math.random().toString(36).substring(2,8)}`,t.savedAt=new Date().toISOString();let a=p().join(process.cwd(),"data","payments.json"),s=[];try{let e=d().readFileSync(a,"utf-8");s=JSON.parse(e)}catch(t){console.log("\uD83D\uDCC1 Creating new payments database");let e=p().join(process.cwd(),"data");d().existsSync(e)||d().mkdirSync(e,{recursive:!0})}let r=s.find(e=>e.stripePaymentId===t.stripePaymentId);return r?(console.log("⚠️ Payment already exists, updating instead"),r.updatedAt=new Date().toISOString(),r.status=t.status,r.notificationsSent=t.notificationsSent):(s.push(t),console.log("✅ New payment added to database")),d().writeFileSync(a,JSON.stringify(s,null,2)),console.log("\uD83D\uDCBE Payment saved successfully (optimized single write)"),i.Z.json({success:!0,message:"Payment saved to database",paymentId:t.id,accessCode:t.accessCode,optimization:"single_write_operation"})}catch(e){return console.error("❌ Database save error:",e),i.Z.json({success:!1,error:"Failed to save payment to database",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function m(e){try{let t=new URL(e.url),a=t.searchParams.get("email"),s=t.searchParams.get("code"),r=p().join(process.cwd(),"data","payments.json");if(!d().existsSync(r))return i.Z.json({payments:[]});let n=d().readFileSync(r,"utf-8"),o=JSON.parse(n);return a&&(o=o.filter(e=>e.email===a)),s&&(o=o.filter(e=>e.accessCode===s)),i.Z.json({success:!0,payments:o,count:o.length})}catch(e){return console.error("❌ Database read error:",e),i.Z.json({success:!1,error:"Failed to read payments from database"},{status:500})}}let y=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/database/save-payment/route",pathname:"/api/database/save-payment",filename:"route",bundlePath:"app/api/database/save-payment/route"},resolvedPagePath:"C:\\Users\\user\\Desktop\\plipli paranormal\\app\\api\\database\\save-payment\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:S,serverHooks:f,headerHooks:v,staticGenerationBailout:h}=y,w="/api/database/save-payment/route";function D(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:S})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),s=t.X(0,[1638,6206],()=>a(99583));module.exports=s})();